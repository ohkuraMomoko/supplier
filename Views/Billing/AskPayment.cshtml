@{ 
	ViewBag.Title = "線上請款"; 
} 
@section header {
	@Styles.Render("~/Content/pages/billing/AskPayment.min.css") 
}

<div id="page" class="page">
	<div class="page-container">
		<div class="page-top"
			v-bind:class="changeFixed ? 'fixed' : ''">
			<p class="page-title">@ViewBag.Title</p>
		</div>

		<!-- block: result -->
		<!-- resultStatus: 0(loading) / 1(查詢無資料/尚未查詢) / 2(正常返回結果) -->
		<div>
			<div class="result" >
				<div class="result--null" v-if="resultStatus === 0">
					<img src="@Url.Content("~/Content/images/icon-searchlist-loading.gif")" alt="" class="center pic">
					<p class="desc">正在為您努力載入...</p>
				</div>
				<div class="result--null" v-else-if="resultStatus === 1">
					<img src="@Url.Content("~/Content/images/icon-searchlist-none-result.svg")" alt="" class="center pic">
					<p class="title">尚未有可請款的案件</p>
				</div>
				<div class="result--ok" v-else-if="resultStatus === 2">
					<!-- rwd: 請款申請操作區域 desktop -->
					<div v-if="!isMobile">
						<div class="filter"
							v-if="selected.length === 0">
							<div class="d-flex">
								<span class="filter-title">篩選條件：</span>
								<div class="d-flex box">
									<div class="search-select">
										<select v-model.number="form.search_type" 
											@@change="searchKeyword">
											<option value="" disabled>請選擇</option>
											<option
												v-for="option in formOptions.search_type"
												v-bind:value="option.value"
												v-text="option.text">
											</option>
										</select>
									</div>
									<div class="form-input search-input"
										v-if="!showDatapicker">
										<input type="text" id="order_sn" name="order_sn" class="" placeholder="請輸入"
											v-model.trim="keyword"/>
									</div>
									<div v-else>
										<div class="d-flex">
											<div class="datapicker mr-md-3">
											<b-form-datepicker
												v-model="start_date"
												:min="datePicker.minDate"
												:max="datePicker.maxDate"
												:date-format-options="{ year: 'numeric', month: 'numeric', day: 'numeric' }"
												:hide-header="true"
												:menu-class="'datepicker-costom'"
												:no-highlight-today="true"
												locale="zh"
												placeholder="請選擇"
											></b-form-datepicker>
										</div>
										<div class="datapicker">
											<b-form-datepicker
												v-model="end_date"
												:min="datePicker.minDate"
												:max="datePicker.maxDate"
												:date-format-options="{ year: 'numeric', month: 'numeric', day: 'numeric' }"
												:hide-header="true"
												:menu-class="'datepicker-costom'"
												:no-highlight-today="true"
												locale="zh"
												placeholder="請選擇"
											></b-form-datepicker>
										</div>
										</div>
									</div>
								</div>
							</div>
							<div class="btn-common btn-common-white"
								@@click="clearCondition">清空篩選條件</div>
						</div>
						<div class="request" 
							v-else>
                            <p>已選擇 {{ selected.length }} 筆 ｜ 總請款金額： {{ $options.filters.amountAddDot(allPrice) }}</p>
							<div class="btn-common btn-common-pink"
								@@click="sendToRequest"
								>送出請款</div>
						</div>
					</div>
					<div v-else>
						<div class="mobile-request"
							v-bind:class="changeFixed ? 'fixed' : ''">
							<div class="mobile-request--item">
								<div class="d-flex"
									v-if="selected.length !== pagination.perPage && selected.length !== 0"
									@@click="selected = []">
									<img src="@Url.Content("~/Content/images/icon-radio-decrease.svg")" alt="">
									<span class="text">全選</span>
								</div>
								<div class="checkboxitem"
									v-else>
									<input type="checkbox"
										v-bind:name="'selectall_checkbox'"
										v-bind:id="'selectall_checkbox'"
										autocomplete="off"
										v-model="selectAll" />
									<label v-bind:for="'selectall_checkbox'" >全選</label>
								</div>
							</div>
							<div class="mobile-request--item">
								<div class="mobile-filter"
									v-if="selected.length === 0"
									@@click="isShowOverviewMobile = true">
									<span>篩選條件</span>
									<img src="@Url.Content("~/Content/images/icon-arrow-right-black.svg")" alt="">
								</div>
								<div v-else>
									<div class="mobile-info">
										<p>已選擇 {{ selected.length }} 筆 
											<br>總請款金額： {{ $options.filters.amountAddDot(allPrice) }}</p>
									</div>
								</div>
							</div>
							
						</div>
						<transition name="fade">
							<div class="btn-common btn-common-pink mobile-request-btn"
								v-bind:class="selected.length !== 0 ? 'display-show' : ''"
								@@click="sendToRequest"
							>送出請款</div>
						</transition>
					</div>

					<!-- rwd: 查詢結果 mobile -->
					<div class="mobile-box"
						v-if="isMobile">
						<case-item
							v-for="data in filteredData"
							:key="data.case_sn"
							v-bind:case_data="data"
							v-bind:item_selected="selected" 
							v-on:input="changeSelect"
							v-on:cancel_case="cancelCase"></case-item>
					</div>
					<!-- rwd: 查詢結果 desktop -->
					<div class="table-box" v-else>
						<div class="table-control table-control--reorder">
							<div class="d-flex align-items-center" style="width: 44px;"
								v-if="selected.length !== pagination.perPage && selected.length !== 0"
								@@click="selected = []">
								<img src="@Url.Content("~/Content/images/icon-radio-decrease.svg")" style="height: 24px;">
							</div>
							<div class="checkboxitem"
								v-else>
								<input type="checkbox"
									v-bind:name="'selectall_checkbox'"
									v-bind:id="'selectall_checkbox'"
									autocomplete="off"
									v-model="selectAll" />
								<label v-bind:for="'selectall_checkbox'" class="selectall_checkbox_label">&nbsp;</label>
							</div>

							<div class="table-control--item"
								v-on:click="sortBy('date')"
								v-bind:style="{ width: columnWidth.date }">
								申請日期<div class="arrow"></div>
							</div>
							<div class="table-control--item"
								v-on:click="sortBy('order_sn')"
								v-bind:style="{ width: columnWidth.order_sn }">
								訂單編號<div class="arrow"></div>
							</div>
							<div class="table-control--item"
								v-on:click="sortBy('case_sn')"
								v-bind:style="{ width: columnWidth.case_sn }">
								案件編號<div class="arrow"></div>
							</div>
							<div class="table-control--item"
								v-on:click="sortBy('store')"
								v-bind:style="{ width: columnWidth.store }">
								門市 <div class="arrow"></div>
							</div>
							<div class="table-control--item"
								v-on:click="sortBy('customer')"
								v-bind:style="{ width: columnWidth.customer }">
								客戶姓名<div class="arrow"></div>
							</div>
							<div class="table-control--item"
								v-on:click="sortBy('price')"
								v-bind:style="{ width: columnWidth.price }">
								消費金額<div class="arrow"></div>
							</div>
							<div class="table-control--item"
								v-on:click="sortBy('period')"
								v-bind:style="{ width: columnWidth.period }">
								期數<div class="arrow"></div>
							</div>
							<div class="table-control--item"
								v-on:click="sortBy('appropriation_price')"
								v-bind:style="{ width: columnWidth.appropriation_price }">
								撥款金額<div class="arrow"></div>
							</div>
							<div class="table-control--item cursor-none"
								v-bind:style="{ width: columnWidth.status }">動作</div>
						</div>
						<div class="table-content">
							<table-row
								v-for="data in filteredData"
								:key="data.case_sn"
								v-bind:case_data="data"
								v-bind:colume_width="columnWidth"
								v-bind:item_selected="selected" 
								v-on:input="changeSelect"
								v-on:cancel_case="cancelCase"></table-row>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<!-- mobile: 篩選條件 -->
	<transition name="fade">
		<div class="overview-mobile"
			v-bind:class="isShowOverviewMobile ? 'display-show' : ''">
			<div class="overview-mobile--close"
				@@click="isShowOverviewMobile = false">
				<img src="@Url.Content("~/Content/images/icon-navigation-close-black.svg")" alt="">
			</div>
			<p class="overview--title">篩選條件</p>
			<div class="overview-content">
				<div class="search-select mb-3">
					<select v-model.number="form.search_type" 
						@@change="searchKeyword">
						<option value="" disabled>請選擇</option>
						<option
							v-for="option in formOptions.search_type"
							v-bind:value="option.value"
							v-text="option.text">
						</option>
					</select>
				</div>
				<div class="form-input search-input mb-3"
					v-if="!showDatapicker">
					<input type="text" id="order_sn" name="order_sn" class="" placeholder="請輸入"
						v-model.trim="keyword"/>
				</div>
				<div v-else>
					<div class="datapicker mb-3">
						<b-form-datepicker
							v-model="start_date"
							:min="datePicker.minDate"
							:max="datePicker.maxDate"
							:date-format-options="{ year: 'numeric', month: 'numeric', day: 'numeric' }"
							:hide-header="true"
							:menu-class="'datepicker-costom'"
							:no-highlight-today="true"
							locale="zh"
							placeholder="請選擇"
						></b-form-datepicker>
					</div>
					<div class="datapicker mb-3">
						<b-form-datepicker
							v-model="end_date"
							:min="datePicker.minDate"
							:max="datePicker.maxDate"
							:date-format-options="{ year: 'numeric', month: 'numeric', day: 'numeric' }"
							:hide-header="true"
							:menu-class="'datepicker-costom'"
							:no-highlight-today="true"
							locale="zh"
							placeholder="請選擇"
						></b-form-datepicker>
					</div>
				</div>
			<div class="overview-btn">
				<div class="btn-common btn-common-pink overview-btn--ok mb-3"
				@@click="isShowOverviewMobile = false">確定</div>
				<div class="btn-common btn-common-white overview-btn--clear"
					@@click="clearCondition">清空篩選條件</div>
			</div>
			</div>
		</div>
	</transition>
	<!-- modal: 取消案件 -->
    <b-modal id="model_Cancel"
        v-model="model_Cancel.isShow"
        v-bind:centered="true"
        v-bind:hide-footer="true"
        v-bind:title="'確定要取消這筆案件？'"
        v-bind:hide-header-close="true"
        v-bind:dialog-class="model_Cancel.statusClass">
        <div class="modal-body--content"></div>
        <div class="modal-custome--footer">
            <div class="modal-custome-btn btn--cancel"
                @@click="model_Cancel.isShow = false">取消</div>
            <div class="modal-custome-btn btn--ok"
                @@click="sendCancle">確定</div>
        </div>
	</b-modal>
	
	<!-- modal: 通用訊息 -->
    <b-modal id="model_Common"
        v-model="model_Common.isShow"
        v-bind:centered="true"
        v-bind:hide-footer="true"
        v-bind:title="model_Common.title"
        v-bind:hide-header-close="true"
        v-bind:dialog-class="model_Common.statusClass">
        <div class="modal-body--content">
            <p v-html="model_Common.content"></p>
        </div>
        <div class="modal-custome--footer">
            <div class="modal-custome-btn btn--cancel"
                v-if="model_Common.hasCancel"
                @@click="model_Common.isShow = false">取消</div>
            <div class="modal-custome-btn btn--ok"
                v-if="model_Common.hasOk"
                @@click="model_Common.isShow = false">確定</div>
        </div>
    </b-modal>
</div>

@section scripts {
<script type="text/babel">
	// 區分桌手機component: tableRow (desktop) / caseItem (mobile)
	const tableRow = Vue.component("table-row", {
		props: ["case_data", "colume_width", 'item_selected'],
		data: function() {
			return {
				
			};
		},
		template: 
			`<transition name="fade">
				<div class="table-row" 
                    v-bind:id="'row'+case_data.case_sn">
					<div class="table-row--item" style="width: 44px;">
						<div class="checkboxitem">
							<input type="checkbox"
								v-bind:name="'case_sn'"
								v-bind:id="case_data.case_sn"
								v-bind:value="case_data.case_sn"
								v-on:change="onChange" 
								v-bind:checked="isChecked" 
								autocomplete="off"/>
							<label v-bind:for="case_data.case_sn"></label>
						</div>
					</div>
                    <div class="table-row--item" 
                        v-bind:style="{ width: colume_width.date }">
                        {{ case_data.date }}
                    </div>
					<div class="table-row--item" 
                        v-bind:style="{ width: colume_width.order_sn }">
                        <p class="limit-6">{{ case_data.order_sn }}</p>
                    </div>
					<div class="table-row--item" 
                        v-bind:style="{ width: colume_width.case_sn }">
                        <p class="limit-6">{{ case_data.case_sn }}</p>
                    </div>
                    <div class="table-row--item" 
                        v-bind:style="{ width: colume_width.store }">
                        <p class="limit-6">{{ case_data.store }}</p>
                    </div>
                    <div class="table-row--item" 
                        v-bind:style="{ width: colume_width.customer }">
                        <p class="limit-3">{{ case_data.customer }}</p>
                    </div>
                    <div class="table-row--item" 
                        v-bind:style="{ width: colume_width.price }">
                        <div class="case-money">
                            <img src="@Url.Content("~/Content/images/icon-case-amounts.svg")" alt="">
                            {{ $options.filters.amountAddDot(case_data.price) }}
                        </div>
                    </div>
                    <div class="table-row--item" 
                        v-bind:style="{ width: colume_width.period }">
                        {{ case_data.period }}
                    </div>
					<div class="table-row--item" 
                        v-bind:style="{ width: colume_width.appropriation_price }">
                        <div class="case-money">
                            <img src="@Url.Content("~/Content/images/icon-case-amounts.svg")" alt="">
                            {{ $options.filters.amountAddDot(case_data.appropriation_price) }}
                        </div>
                    </div>
                    <div class="table-row--item" 
                        v-bind:style="{ width: colume_width.status }">
                        <div class="case-detail"
                            v-bind:id="'pay'+case_data.case_sn"
							v-if="case_data.status"
                            v-on:click="onCancel">
                            <img src="@Url.Content("~/Content/images/icon-delete-black.svg")" />
                        </div>
                        <b-tooltip v-bind:target="'pay'+case_data.case_sn" placement="left">取消案件</b-tooltip>
                    </div>
                </div>
			</transition>`,
		computed: {
			isChecked: function() {
				return (this.item_selected.indexOf(this.case_data.case_sn) > -1) && (this.item_selected.length !== 0)
				
			}
		},
		methods: {
			onCancel: function() {
				this.$emit('cancel_case', this.case_data.case_sn)
			},
			onChange: function(e) {
				this.$emit('input', e)
			}
		},
	});

	const caseItem = Vue.component("case-item", {
		props: ["case_data", 'item_selected'],
		data: function() {
			return {
				isOpen: false
			};
		},
		created: function() {},
		template: 
			`<transition name="fade">
				<div v-bind:id="'row'+case_data.case_sn">
					<div class="case-item appropriant"
						v-bind:class="[case_data.isCancel ? 'cancel' : '' ,
							isOpen ? 'open' : '']"
						@@click="changeDetailShow">
						<div class="d-flex case-content">
							<div class="case-content--item">
								<div class="checkboxitem">
									<input type="checkbox"
										v-bind:name="'case_sn'"
										v-bind:id="case_data.case_sn"
										v-bind:value="case_data.case_sn"
										v-on:change="onChange" 
										v-bind:checked="isChecked" 
										autocomplete="off"/>
									<label v-bind:for="case_data.case_sn"></label>
								</div>
							</div>
							<div class="case-content--item">
								<div class="case-content-row">
									<span class="case-name">
										<img src="@Url.Content("~/Content/images/icon-user-pink.svg")" alt="">
										{{ case_data.customer }}
									</span>
								</div>
								<div class="case-content-row">
									<span class="case-money">
										<img src="@Url.Content("~/Content/images/icon-case-amounts-red.svg")" alt=""
											v-if="case_data.isCancel">
										<img src="@Url.Content("~/Content/images/icon-case-amounts-pink.svg")" alt=""
											v-else>
										{{ $options.filters.amountAddDot(case_data.price) }}
									</span>
								</div>
							</div>
						</div>
						<div class="case-detail" v-if="isOpen">
							<div class="detail-item">
								<div class="detail-item--title">
									<p>申請日期</p>
									<p>訂單編號</p>
									<p>案件編號</p>
									<p>門市</p>
									<p>期數</p>
									<p>撥款金額</p>
								</div>
								<div class="detail-item--data">
									<p v-text="case_data.date"></p>
									<p v-text="case_data.order_sn"></p>
									<p v-text="case_data.case_sn"></p>
									<p v-text="case_data.store"></p>
									<p v-text="case_data.period"></p>
									<p v-text="$options.filters.amountAddDot(case_data.appropriation_price)"></p>
								</div>
							</div>
							<div class="detail-item--cancel"
								v-if="case_data.status"
								v-on:click="onCancel">
								<img src="@Url.Content("~/Content/images/icon-delete-black.svg")" />
								<span>&nbsp;取消案件</span>
							</div>
						</div>
						<div class="case-footer" v-else >
							<span class="case-footer--time">
								<img src="@Url.Content("~/Content/images/icon-date-pink.svg")" alt="">
								{{ case_data.date }}
							</span>
							<span class="case-shop">
								<img src="@Url.Content("~/Content/images/icon-order-num-pink.svg")" alt="">
								{{ case_data.order_sn }}
							</span>
						</div>
					</div>
				</div>
			</transition>`,
		computed: {
			isChecked: function() {
				return this.item_selected.indexOf(this.case_data.case_sn) > -1;
			}
		},
		methods: {
			changeDetailShow: function() {
				this.isOpen = !this.isOpen
			},
			onCancel: function() {
				this.$emit('cancel_case', this.case_data.case_sn)
			},
			onChange: function(e) {
				this.$emit('input', e)
			}
		}
	});

	var page = new Vue({
		el: "#page",
		mixins: [myMixin],
		store: store,
		component: {
			tableRow,
			caseItem
		},
		data: {
			isMobile: false,
			model_Common: {
                title: '提示訊息',
				content: '',
                isShow: false,
                btnValue: '',
                hasCancel: false,
                hasOk: true,
                statusClass: 'modal-custome',
            },
			cancel_val: '',
			model_Cancel: {
                isShow: false,
                statusClass: 'modal-custome',
            },
			apiUrl_AskPaymentList: '@Url.Action("AskPaymentList", "Billing")',
			apiUrl_CancelCase: '@Url.Action("CancelCase", "Case")',
			columnWidth: {
				date: "10%",
				order_sn: "12%",
				case_sn: "12%",
				store: "12%",
				customer: "10%",
				price: "12%",
				period: "8%",
				appropriation_price: "12%",
				status: "5%"
			},
			datePicker: {
				today: new Date(),
				minDate: new Date(),
				maxDate: new Date()
			},
			formOptions: {
				search_type: [
					{ value: 1, text: "訂單編號" },
					{ value: 2, text: "申請金額" },
					{ value: 3, text: "案件編號" },
					{ value: 4, text: "姓名" },
					{ value: 5, text: "申請日" },
					// { value: 6, text: "核准日" },
				],
			},
			start_date: "",
			end_date: "",
			form: {
				search_type: "",
				search: "",
			},
			apiDatas: [],
			apiDatas_store: [],
			sortKey: "",
			sortOrders: {},
			resultStatus: 1,
			pagination: {
				limit: 9,
				rows: 50, /* TODO: 替換為API回來的total_num總頁數 */
				perPage: 20,
				currentPage: 1
			},
			changeFixed: false,
			selected: [],
			keyword: '',
			showDatapicker: false,
			cancelItem: '',
			isShowOverviewMobile: false
		},
		created: function() {
			app.currentPage.AskPayment = true
			this.checkSize()
			window.addEventListener('scroll', () => {
                this.checkSize()
			}, true);
			window.addEventListener('resize', () => {
                this.checkSize()
			}, true);
			this.settingDatepicker();
			this.getTableData(this.pagination.currentPage);

			// this.selected = JSON.parse(
            //     sessionStorage.getItem("paymentList")
            // );
		},
		mounted: function() {
			console.log(this.$store.getters.getWindowWidth);
		},
		watch: {
			keyword: function(val) {
				this.searchKeyword()
			},
			start_date: function(val) {
				this.checkData()
			},
			end_date: function(val) {
				this.checkData()
			}
		},
		computed: {
			filteredData: function() {
				var data = this.apiDatas;
				return data;
			},
			selectAll: {
				get: function () {
					return this.selected.length === this.apiDatas.length && this.apiDatas.length !== 0
				},
				set: function (value) {
					var selected = [];
					if (value) {
						this.apiDatas.forEach(function (i) {
							selected.push(i.case_sn);
						});
					}
					this.selected = selected;
				}
			},
			allPrice: function() {
				let temp = 0
				for(let i=0; i < this.apiDatas.length; i++){
					for(let j=0; j < this.selected.length; j++) {
						if(this.apiDatas[i].case_sn == this.selected[j]) {
							temp += +this.apiDatas[i].appropriation_price;
						}
					}
				}
				return temp;
			}
		},
		methods: {
			onScroll: function ({ target: { scrollTop, clientHeight, scrollHeight }}) {
				if (scrollTop + clientHeight >= scrollHeight) {
					this.getNotiData();
				}
			},
			getNotiData: function(start = 0, len=20, order='desc' ) {
                    let vm = this;

                    faker.locale = "zh_TW";
                    for (let index = 0; index < len; index++) {
                        vm.apiDatas.push({
                            date: faker.date.past().toISOString(),
							order_sn: faker.random.number(),
							case_sn: faker.random.number(),
							store: faker.company.companyName(),
							customer: faker.name.firstName() + faker.name.lastName(),
							price: faker.random.number(),
							period: faker.random.number(),
							appropriation_price: faker.random.number(),
							status: true,
							channel: "ZERO_CARD_OFFLINE",
							merchant_id: faker.random.number()
                        });
                    }
                    
                },
			checkSize: function() {
				let scrollTop = document.documentElement.scrollTop ||
							document.body.scrollTop ||
							document.querySelector('body').scrollTop;
				if(scrollTop >= 100){
					this.changeFixed = true;
				}else {
					this.changeFixed = false;
				}

				if(this.$store.getters.getWindowWidth <= this.$store.getters.getBreakpoint) {
					this.isMobile = true;
				}else {
					this.isMobile = false;
				}
			},
			searchKeyword: function() {
				let vm = this
				this.selected = []
				vm.apiDatas = vm.apiDatas_store
				
				if(vm.form.search_type == "") return 

				if(vm.keyword !== "" && vm.form.search_type !== 5){
					vm.showDatapicker = false
					vm.start_date = ""
					vm.end_date = ""
					let temp = vm.apiDatas.filter(function (value, index, array){
						if(vm.form.search_type === 1) {
							return value.order_sn.toString().search(vm.keyword) !== -1
						}else if(vm.form.search_type === 2) {
							return value.price.toString().search(vm.keyword) !== -1
						}else if(vm.form.search_type === 3) {
							return value.case_sn.toString().search(vm.keyword) !== -1
						}else if(vm.form.search_type === 4) {
							return value.customer.toString().search(vm.keyword) !== -1
						}
					})
					vm.apiDatas = temp
				}else if(vm.form.search_type === 5) {
					vm.showDatapicker = true
					vm.keyword = ""
				}else {
					vm.showDatapicker = false
					vm.keyword = ""
					vm.start_date = ""
					vm.end_date = ""
				}
			},
			checkData: function() {
				let vm = this 
				if(vm.start_date == "") return 
				if(vm.end_date == "") return 
				if(!moment(vm.start_date).isSameOrBefore(vm.end_date)){
					vm.model_Common.isShow = true;
					vm.model_Common.content = "迄日不可大於起日";
					return;
				}

				vm.apiDatas = vm.apiDatas_store
				
				let temp = vm.apiDatas.filter(function(value, index, array) {
					return moment(value.date).isBetween(vm.start_date, vm.end_date, undefined, '[]')
				})
				vm.apiDatas = temp
			},
			settingDatepicker: function() {
				this.datePicker.minDate = moment().subtract(59, 'day').format("YYYY/MM/DD")
				this.datePicker.maxDate = moment().format("YYYY/MM/DD")
				this.datePicker.today = moment().format("YYYY/MM/DD")
			},
			getTableData: function(currentPage) {
				let vm = this;
				this.resultStatus = 0;
				let temp = [];
				vm.apiDatas = [];

				// TODO: 置換API
				var response = {
					data : @Html.Raw(Json.Encode(ViewBag.AskPaymentList))
				};
				console.log(response);
				if (response.data.Result.ReturnCode == 0  && response.data.Data.Cases.length !== 0) {
					for (let index = 0; index < response.data.Data.Cases.length; index++) {
						vm.apiDatas.push({
							date: response.data.Data.Cases[index].CreateDt,
							order_sn: response.data.Data.Cases[index].OrderId,
							case_sn: response.data.Data.Cases[index].AppNo,
							store: response.data.Data.Cases[index].StoreName,
							customer: response.data.Data.Cases[index].CustName,
							price: response.data.Data.Cases[index].TransactionAmount,
							period: response.data.Data.Cases[index].Period,
							appropriation_price: response.data.Data.Cases[index].AppropriationAmount,
							status: response.data.Data.Cases[index].IsCanCancel == "Y",
							"channel": response.data.Data.Cases[index].Channel,
							"merchant_id": response.data.Data.Cases[index].MerchantId
						});
					}

					vm.apiDatas_store = vm.apiDatas;

					// api回來正常有資料，resultStatus=2
					vm.resultStatus = 2;
					//重新抓資料之後，頁面向上滑動
					vm.scrollToTop()

					// 資料排序
					if (vm.apiDatas[0]) {
						let keys = Object.keys(vm.apiDatas[0]);
						for (let i = 0; i < keys.length; i++) {
							this.sortOrders[keys[i]] = 1;
						}
					}

					return;
				}

				// 若api回來沒有資料，resultStatus=1
				vm.resultStatus = 1;

			},
			sortBy: function(key) {
				var sortKey = key;
				this.sortOrders[sortKey]  = this.sortOrders[sortKey] * -1;
				var order = this.sortOrders[sortKey];
				var data = this.apiDatas;

				if (sortKey) {
					data = data.slice().sort(function(a, b) {
						a = a[sortKey];
						b = b[sortKey];
						return (a === b ? 0 : a > b ? 1 : -1) * order;
					});
					this.apiDatas = data;
				}
			},
			changePage: function(currentPage) {
				// get api data
				// this.getTableData(this.pagination.currentPage);
			},
			changeSelect: function(e) {
				if (e.target.checked) {
					this.selected.push(e.target.value)  
				}
				else 
				{
					var index = this.selected.indexOf(e.target.value);
					if (index > -1) {
						this.selected.splice(index, 1);
					}
				}
			},
			clearCondition: function() {
				this.keyword = ""
				this.start_date = ""
				this.end_date = ""
				this.apiDatas = this.apiDatas_store
			},
			cancelCase: function(e) {
				this.model_Cancel.isShow = true
				this.cancelItem = e;
				console.log("cancelCase:",this.cancelItem);
			},
			sendCancle: function() {
				let vm = this
				console.log("sendCancle:");
                axios.post(vm.apiUrl_CancelCase, {
					caseNumber: vm.cancelItem,
				})
				.then(function (response) {
                    if (response.data.ReturnCode == 0) {
						let temp = vm.apiDatas.filter(function (value, index, array){
							return value.case_sn !== vm.cancelItem;
						})
                        
                        // 將被取消掉的案件，從vm.selected 裡面移除掉
                        var index = vm.selected.indexOf(vm.cancelItem);
					    if (index > -1) {
						    vm.selected.splice(index, 1);
					    }

						vm.apiDatas = temp;
                        vm.model_Common.content = response.data.Alert;
                        vm.model_Common.statusClass = 'modal-custome modal-custome--success';
                        vm.model_Common.hasCancel = false;
                        vm.model_Common.isShow = true;
                    }
				})
				.catch(function(error){

				});
    			vm.model_Cancel.isShow = false
			},
			sendToRequest: function() {
				sessionStorage.setItem('paymentList', null);
				if(this.selected.length === 0) {
                    return;
                }
				let temp = [];
				for(let i=0; i < this.apiDatas.length; i++) {
					for(let j=0; j < this.selected.length; j++) {
						if(this.apiDatas[i].case_sn == this.selected[j]) { 
                            temp.push(this.apiDatas[i]);
                        }
					}
				}
				sessionStorage.setItem('paymentList', JSON.stringify(temp));
				window.location.href = "paymentuploadlist";
			}
		}
	});
</script>
}
